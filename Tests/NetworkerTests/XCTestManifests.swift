#if !canImport(ObjectiveC)
import XCTest

extension CombineDispatchTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CombineDispatchTests = [
        ("testDispatch", testDispatch),
    ]
}

extension PathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathTests = [
        ("testAppend", testAppend),
        ("testExpressibleByStringLiteral", testExpressibleByStringLiteral),
        ("testExpressibleByStringLiteralIgnoresParameters", testExpressibleByStringLiteralIgnoresParameters),
        ("testRawPath", testRawPath),
        ("testThrowingPatternWithoutLeadingSlash", testThrowingPatternWithoutLeadingSlash),
        ("testWithParameters", testWithParameters),
    ]
}

extension PluginTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PluginTests = [
        ("testInjectHeaderPlugin", testInjectHeaderPlugin),
        ("testInjectHeaderPlugingDynamic", testInjectHeaderPlugingDynamic),
    ]
}

extension RequestTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RequestTests = [
        ("testUrlExtraction", testUrlExtraction),
        ("testUrlWithInvalidChars", testUrlWithInvalidChars),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CombineDispatchTests.__allTests__CombineDispatchTests),
        testCase(PathTests.__allTests__PathTests),
        testCase(PluginTests.__allTests__PluginTests),
        testCase(RequestTests.__allTests__RequestTests),
    ]
}
#endif
